{
  "address": "0xa4980cF596b5c123E0f7c4F50d7936113654681B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wrappedEtherContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "thisAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NativeUnwrapped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "enum AssetType",
                  "name": "assetType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "assetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct Asset",
              "name": "asset",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct AssetAmount[]",
          "name": "assetAmounts",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Asset",
                  "name": "asset",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AssetAmount[]",
              "name": "inputAssetAmounts",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Asset",
                  "name": "asset",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AssetAmount[]",
              "name": "outputAssetAmounts",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AssetType",
                      "name": "assetType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "assetAddress",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct Asset",
                  "name": "asset",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct AssetAmount[]",
              "name": "outputAssetAmountsToCaller",
              "type": "tuple[]"
            },
            {
              "internalType": "int16",
              "name": "nextStepIndex",
              "type": "int16"
            },
            {
              "internalType": "int24",
              "name": "fee",
              "type": "int24"
            }
          ],
          "internalType": "struct WorkflowStepResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd17ed5c50ed0a86e99b6d7db43d476d837b0ef2634a01f5a3e92b7ff5edcf3b4",
  "receipt": {
    "to": null,
    "from": "0x242b2eeCE36061FF84EC0Ea69d4902373858fB2F",
    "contractAddress": "0xa4980cF596b5c123E0f7c4F50d7936113654681B",
    "transactionIndex": 51,
    "gasUsed": "689502",
    "logsBloom": "0x
    "blockHash": "0xebed9a1ec0ea219c6c8c066381f35e6b30fee63f248673de85a3da6e47034f79",
    "transactionHash": "0xd17ed5c50ed0a86e99b6d7db43d476d837b0ef2634a01f5a3e92b7ff5edcf3b4",
    "logs": [],
    "blockNumber": 9802221,
    "cumulativeGasUsed": "5833413",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6"
  ],
  "numDeployments": 1,
  "solcInputHash": "80d4423b03c40420a3a03475f8c36394",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrappedEtherContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"thisAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeUnwrapped\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"assetAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"inputAssetAmounts\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"outputAssetAmounts\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"enum AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"assetAddress\",\"type\":\"address\"}],\"internalType\":\"struct Asset\",\"name\":\"asset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct AssetAmount[]\",\"name\":\"outputAssetAmountsToCaller\",\"type\":\"tuple[]\"},{\"internalType\":\"int16\",\"name\":\"nextStepIndex\",\"type\":\"int16\"},{\"internalType\":\"int24\",\"name\":\"fee\",\"type\":\"int24\"}],\"internalType\":\"struct WorkflowStepResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnwrapNativeAction.sol\":\"UnwrapNativeAction\"},\"evmVersion\":\"paris\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@freemarket/core/contracts/IWorkflowStep.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './model/Asset.sol';\\nimport './model/AssetAmount.sol';\\nimport './model/WorkflowStepResult.sol';\\n\\n/// @title The interface between WorkflowRunner and each Step implementation.abi\\n/// @author Marty Saxton\\n/// @notice All steps must implement this interface.\\ninterface IWorkflowStep {\\n  /// @notice called by WorkflowRunner to execute a workflow step.\\n  /// @param assetAmounts AssetAmounts to be used by the step\\n  /// @param argData Step specific arguments in ABI encoding\\n  /// @param userAddress the address of the user\\n  /// @return the outcome of the step invocation\\n  function execute(\\n    AssetAmount[] calldata assetAmounts,\\n    bytes calldata argData,\\n    address userAddress\\n  ) external payable returns (WorkflowStepResult memory);\\n}\\n\",\"keccak256\":\"0x637a266321d30aeaf12f0582f4ac7c70197aeb3fb4096699eabd23e447b930b5\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./AssetType.sol\\\";\\n\\nstruct Asset {\\n    AssetType assetType;\\n    address assetAddress; // 0x0 for ETH, the ERC20 address.  If it's an account balance, this could represent the token of the account\\n}\\n\",\"keccak256\":\"0x2031c32d59aa2c1c6081156d4d06c9c6aff579a0b8f5d2f81ad86ff503e9e8a8\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetAmount.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './Asset.sol';\\n\\nstruct AssetAmount {\\n  Asset asset;\\n  uint256 amount;\\n}\\n\",\"keccak256\":\"0x4f57b823b38d6e8727dfa94708f63573854b74e44553f6f609bca64cc718ff0e\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/AssetType.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nenum AssetType {\\n    Native,\\n    ERC20,\\n    ERC721\\n}\\n\",\"keccak256\":\"0xb9592fa2334517b52dae64c34f0254b4d75b20b60da00c5fc5c6e0316487e963\",\"license\":\"MIT\"},\"@freemarket/core/contracts/model/WorkflowStepResult.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport './AssetAmount.sol';\\n\\n// The return value from the execution of a step.\\nstruct WorkflowStepResult {\\n  // The amounts of each input asset that resulted from the step execution.\\n  AssetAmount[] inputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmounts;\\n  // The amounts of each output asset that resulted from the step execution.\\n  AssetAmount[] outputAssetAmountsToCaller;\\n  // The index of the next step in a workflow.\\n  // This value allows the step to override the default nextStepIndex\\n  // statically defined\\n  // -1 means terminate the workflow\\n  // -2 means do not override the statically defined nextStepIndex in WorkflowStep\\n  int16 nextStepIndex;\\n  // the fee to be withheald out of the output assets (in absolute currency units)\\n  // -1 means use the default fee\\n  int24 fee;\\n}\\n\",\"keccak256\":\"0x0cc72223efa79934b173495c5452dfc6095d2f95cdd4d93c3d0c25cda0893b62\",\"license\":\"MIT\"},\"@freemarket/step-sdk/contracts/IWeth.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\ninterface IWeth {\\n  function deposit() external payable;\\n\\n  function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0xe00c4f29d37fcfa230bcd8a33dab24923b4da32bf943e6e33741c9d8ececc938\",\"license\":\"UNLICENSED\"},\"@freemarket/step-sdk/contracts/LibStepResultBuilder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/model/AssetType.sol';\\nimport '@freemarket/core/contracts/model/WorkflowStepResult.sol';\\n\\nstruct StepResultBuilder {\\n  uint256 inputIndex;\\n  uint256 outputIndex;\\n  uint256 outputToCallerIndex;\\n  WorkflowStepResult result;\\n}\\n\\nlibrary LibStepResultBuilder {\\n  function create(uint256 inputAssetCount, uint256 outputAssetCount) internal pure returns (StepResultBuilder memory) {\\n    AssetAmount[] memory inputAssetAmounts = new AssetAmount[](inputAssetCount);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](outputAssetCount);\\n    AssetAmount[] memory ouputAssetAmountsToCaller = new AssetAmount[](0);\\n\\n    return StepResultBuilder(0, 0, 0, WorkflowStepResult(inputAssetAmounts, ouputAssetAmounts, ouputAssetAmountsToCaller, -2, -1));\\n  }\\n\\n  function create(\\n    uint256 inputAssetCount,\\n    uint256 outputAssetCount,\\n    uint256 outputAssetToCallerCount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    AssetAmount[] memory inputAssetAmounts = new AssetAmount[](inputAssetCount);\\n    AssetAmount[] memory ouputAssetAmounts = new AssetAmount[](outputAssetCount);\\n    AssetAmount[] memory ouputAssetToCallerAmounts = new AssetAmount[](outputAssetToCallerCount);\\n\\n    return StepResultBuilder(0, 0, 0, WorkflowStepResult(inputAssetAmounts, ouputAssetAmounts, ouputAssetToCallerAmounts, -2, -1));\\n  }\\n\\n  function addInputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function addOutputToken(\\n    StepResultBuilder memory builder,\\n    address tokenAddress,\\n    uint256 amount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.ERC20, tokenAddress), amount);\\n    return builder;\\n  }\\n\\n  function addInputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.inputAssetAmounts[builder.inputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputNative(StepResultBuilder memory builder, uint256 amount) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = AssetAmount(Asset(AssetType.Native, address(0)), amount);\\n    return builder;\\n  }\\n\\n  function addOutputAssetAmount(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmounts[builder.outputIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function addOutputAssetAmountToCaller(\\n    StepResultBuilder memory builder,\\n    AssetAmount memory assetAmount\\n  ) internal pure returns (StepResultBuilder memory) {\\n    builder.result.outputAssetAmountsToCaller[builder.outputToCallerIndex++] = assetAmount;\\n    return builder;\\n  }\\n\\n  function setNextStepIndex(StepResultBuilder memory builder, int16 nextStepIndex) internal pure returns (StepResultBuilder memory) {\\n    builder.result.nextStepIndex = nextStepIndex;\\n    return builder;\\n  }\\n\\n  function setFee(StepResultBuilder memory builder, int24 feeInDeciBips) internal pure returns (StepResultBuilder memory) {\\n    builder.result.fee = feeInDeciBips;\\n    return builder;\\n  }\\n}\\n\",\"keccak256\":\"0x54128c41d82f7a3bca199a750d01456c0190d87a384913f777d49df297776d39\",\"license\":\"MIT\"},\"contracts/UnwrapNativeAction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport '@freemarket/core/contracts/IWorkflowStep.sol';\\nimport '@freemarket/step-sdk/contracts/IWeth.sol';\\nimport '@freemarket/step-sdk/contracts/LibStepResultBuilder.sol';\\n\\n\\nusing LibStepResultBuilder for StepResultBuilder;\\n\\ncontract UnwrapNativeAction is IWorkflowStep {\\n  address public immutable wethContractAddress;\\n\\n  event NativeUnwrapped(address thisAddr, uint256 amount);\\n\\n  constructor(address wrappedEtherContractAddress) {\\n    wethContractAddress = wrappedEtherContractAddress;\\n  }\\n\\n  function execute(AssetAmount[] calldata assetAmounts, bytes calldata, address) external payable returns (WorkflowStepResult memory) {\\n\\n    uint256 amount = assetAmounts[0].amount;\\n    emit NativeUnwrapped(address(this), amount);\\n    IWeth weth = IWeth(wethContractAddress);\\n    weth.withdraw(amount);\\n    return LibStepResultBuilder.create(1, 1).addInputToken(wethContractAddress, amount).addOutputNative(amount).result;\\n  }\\n}\\n\",\"keccak256\":\"0x8ed0e6b29d6b43ffc57f71be4026c15532ab4aa095af26adf4cb57c53a5b251d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610c9c380380610c9c833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b608051610b7861012460003960008181608b0152818161011401526101a90152610b786000f3fe6080604052600436106100295760003560e01c806360b4eb981461002e578063e025f40214610059575b600080fd5b34801561003a57600080fd5b50610043610089565b60405161005091906105ef565b60405180910390f35b610073600480360381019061006e91906106fb565b6100ad565b60405161008091906109f8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b56104e9565b6000868660008181106100cb576100ca610a1a565b5b9050606002016040013590507fc6db34506f140e2481bf061902098593c6e2737f38b80822a4214fbbb92c49b23082604051610108929190610a58565b60405180910390a160007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040161016e9190610a81565b600060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b505050506101f1826101e37f0000000000000000000000000000000000000000000000000000000000000000856101d4600180610202565b6103ad9092919063ffffffff16565b61044b90919063ffffffff16565b606001519250505095945050505050565b61020a61051e565b60008367ffffffffffffffff81111561022657610225610a9c565b5b60405190808252806020026020018201604052801561025f57816020015b61024c61054c565b8152602001906001900390816102445790505b50905060008367ffffffffffffffff81111561027e5761027d610a9c565b5b6040519080825280602002602001820160405280156102b757816020015b6102a461054c565b81526020019060019003908161029c5790505b50905060008067ffffffffffffffff8111156102d6576102d5610a9c565b5b60405190808252806020026020018201604052801561030f57816020015b6102fc61054c565b8152602001906001900390816102f45790505b50905060405180608001604052806000815260200160008152602001600081526020016040518060a001604052808681526020018581526020018481526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60010b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60020b815250815250935050505092915050565b6103b561051e565b60405180604001604052806040518060400160405280600160028111156103df576103de6107bc565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff1681525081526020018381525084606001516000015185600001805180919061042290610afa565b8152508151811061043657610435610a1a565b5b60200260200101819052508390509392505050565b61045361051e565b604051806040016040528060405180604001604052806000600281111561047d5761047c6107bc565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152508152602001838152508360600151602001518460200180518091906104c190610afa565b815250815181106104d5576104d4610a1a565b5b602002602001018190525082905092915050565b6040518060a00160405280606081526020016060815260200160608152602001600060010b8152602001600060020b81525090565b60405180608001604052806000815260200160008152602001600081526020016105466104e9565b81525090565b604051806040016040528061055f61056c565b8152602001600081525090565b60405180604001604052806000600281111561058b5761058a6107bc565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d9826105ae565b9050919050565b6105e9816105ce565b82525050565b600060208201905061060460008301846105e0565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261063957610638610614565b5b8235905067ffffffffffffffff81111561065657610655610619565b5b6020830191508360608202830111156106725761067161061e565b5b9250929050565b60008083601f84011261068f5761068e610614565b5b8235905067ffffffffffffffff8111156106ac576106ab610619565b5b6020830191508360018202830111156106c8576106c761061e565b5b9250929050565b6106d8816105ce565b81146106e357600080fd5b50565b6000813590506106f5816106cf565b92915050565b6000806000806000606086880312156107175761071661060a565b5b600086013567ffffffffffffffff8111156107355761073461060f565b5b61074188828901610623565b9550955050602086013567ffffffffffffffff8111156107645761076361060f565b5b61077088828901610679565b93509350506040610783888289016106e6565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106107fc576107fb6107bc565b5b50565b600081905061080d826107eb565b919050565b600061081d826107ff565b9050919050565b61082d81610812565b82525050565b61083c816105ce565b82525050565b6040820160008201516108586000850182610824565b50602082015161086b6020850182610833565b50505050565b6000819050919050565b61088481610871565b82525050565b6060820160008201516108a06000850182610842565b5060208201516108b3604085018261087b565b50505050565b60006108c5838361088a565b60608301905092915050565b6000602082019050919050565b60006108e982610790565b6108f3818561079b565b93506108fe836107ac565b8060005b8381101561092f57815161091688826108b9565b9750610921836108d1565b925050600181019050610902565b5085935050505092915050565b60008160010b9050919050565b6109528161093c565b82525050565b60008160020b9050919050565b61096e81610958565b82525050565b600060a083016000830151848203600086015261099182826108de565b915050602083015184820360208601526109ab82826108de565b915050604083015184820360408601526109c582826108de565b91505060608301516109da6060860182610949565b5060808301516109ed6080860182610965565b508091505092915050565b60006020820190508181036000830152610a128184610974565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610a5281610871565b82525050565b6000604082019050610a6d60008301856105e0565b610a7a6020830184610a49565b9392505050565b6000602082019050610a966000830184610a49565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0582610871565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b3757610b36610acb565b5b60018201905091905056fea2646970667358221220e6c05034e6a402f30fd19cc22df4d7774b9fab2d3418053c5f863287e9fe78ce64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c806360b4eb981461002e578063e025f40214610059575b600080fd5b34801561003a57600080fd5b50610043610089565b60405161005091906105ef565b60405180910390f35b610073600480360381019061006e91906106fb565b6100ad565b60405161008091906109f8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6100b56104e9565b6000868660008181106100cb576100ca610a1a565b5b9050606002016040013590507fc6db34506f140e2481bf061902098593c6e2737f38b80822a4214fbbb92c49b23082604051610108929190610a58565b60405180910390a160007f000000000000000000000000000000000000000000000000000000000000000090508073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040161016e9190610a81565b600060405180830381600087803b15801561018857600080fd5b505af115801561019c573d6000803e3d6000fd5b505050506101f1826101e37f0000000000000000000000000000000000000000000000000000000000000000856101d4600180610202565b6103ad9092919063ffffffff16565b61044b90919063ffffffff16565b606001519250505095945050505050565b61020a61051e565b60008367ffffffffffffffff81111561022657610225610a9c565b5b60405190808252806020026020018201604052801561025f57816020015b61024c61054c565b8152602001906001900390816102445790505b50905060008367ffffffffffffffff81111561027e5761027d610a9c565b5b6040519080825280602002602001820160405280156102b757816020015b6102a461054c565b81526020019060019003908161029c5790505b50905060008067ffffffffffffffff8111156102d6576102d5610a9c565b5b60405190808252806020026020018201604052801561030f57816020015b6102fc61054c565b8152602001906001900390816102f45790505b50905060405180608001604052806000815260200160008152602001600081526020016040518060a001604052808681526020018581526020018481526020017ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60010b81526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60020b815250815250935050505092915050565b6103b561051e565b60405180604001604052806040518060400160405280600160028111156103df576103de6107bc565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff1681525081526020018381525084606001516000015185600001805180919061042290610afa565b8152508151811061043657610435610a1a565b5b60200260200101819052508390509392505050565b61045361051e565b604051806040016040528060405180604001604052806000600281111561047d5761047c6107bc565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152508152602001838152508360600151602001518460200180518091906104c190610afa565b815250815181106104d5576104d4610a1a565b5b602002602001018190525082905092915050565b6040518060a00160405280606081526020016060815260200160608152602001600060010b8152602001600060020b81525090565b60405180608001604052806000815260200160008152602001600081526020016105466104e9565b81525090565b604051806040016040528061055f61056c565b8152602001600081525090565b60405180604001604052806000600281111561058b5761058a6107bc565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d9826105ae565b9050919050565b6105e9816105ce565b82525050565b600060208201905061060460008301846105e0565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261063957610638610614565b5b8235905067ffffffffffffffff81111561065657610655610619565b5b6020830191508360608202830111156106725761067161061e565b5b9250929050565b60008083601f84011261068f5761068e610614565b5b8235905067ffffffffffffffff8111156106ac576106ab610619565b5b6020830191508360018202830111156106c8576106c761061e565b5b9250929050565b6106d8816105ce565b81146106e357600080fd5b50565b6000813590506106f5816106cf565b92915050565b6000806000806000606086880312156107175761071661060a565b5b600086013567ffffffffffffffff8111156107355761073461060f565b5b61074188828901610623565b9550955050602086013567ffffffffffffffff8111156107645761076361060f565b5b61077088828901610679565b93509350506040610783888289016106e6565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106107fc576107fb6107bc565b5b50565b600081905061080d826107eb565b919050565b600061081d826107ff565b9050919050565b61082d81610812565b82525050565b61083c816105ce565b82525050565b6040820160008201516108586000850182610824565b50602082015161086b6020850182610833565b50505050565b6000819050919050565b61088481610871565b82525050565b6060820160008201516108a06000850182610842565b5060208201516108b3604085018261087b565b50505050565b60006108c5838361088a565b60608301905092915050565b6000602082019050919050565b60006108e982610790565b6108f3818561079b565b93506108fe836107ac565b8060005b8381101561092f57815161091688826108b9565b9750610921836108d1565b925050600181019050610902565b5085935050505092915050565b60008160010b9050919050565b6109528161093c565b82525050565b60008160020b9050919050565b61096e81610958565b82525050565b600060a083016000830151848203600086015261099182826108de565b915050602083015184820360208601526109ab82826108de565b915050604083015184820360408601526109c582826108de565b91505060608301516109da6060860182610949565b5060808301516109ed6080860182610965565b508091505092915050565b60006020820190508181036000830152610a128184610974565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610a5281610871565b82525050565b6000604082019050610a6d60008301856105e0565b610a7a6020830184610a49565b9392505050565b6000602082019050610a966000830184610a49565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0582610871565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b3757610b36610acb565b5b60018201905091905056fea2646970667358221220e6c05034e6a402f30fd19cc22df4d7774b9fab2d3418053c5f863287e9fe78ce64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}